{"title":"写一个歌曲下载工具","slug":"download-music-by-nodejs","date":"2016-02-15T08:33:31.000Z","updated":"2017-08-20T13:57:23.776Z","comments":true,"path":"api/articles/download-music-by-nodejs.json","excerpt":"<p>最近有朋友找我帮他下载歌曲，果然在其他人眼里，程序员简直是“无所不能”的存在啊。<br>不过，这个需求对于程序员来讲，还算是比较正常的，比那些找你“刷QB”、“盗号”什么的强多了。</p><p>要是放到以前下载歌曲，直接回一句“搜百度”完事，近年来歌曲版权逐渐被重视了，一些歌曲逐渐变为会员下载或者收费下载。不过好歹还是可以在线播放的，只要能播放，那想找到歌曲文件就很简单了。</p><p>可以从<strong>开发者工具 - Network</strong> 里找音乐文件的请求链接，或者打开浏览器本地缓存文件夹找大文件。</p><p>为了防止以后有朋友发出重复需求，我决定写一个工具出来。</p><p>这其中涉及到了跨域访问、页面内容抓取，最终决定用<code>express</code>和<code>cheerio</code>来搞，服务端不存在跨域问题。</p><p>试了一些音乐网站的歌曲搜索和播放后，最终把目标瞄准了<strong>酷我音乐</strong>。</p>","content":"<p>最近有朋友找我帮他下载歌曲，果然在其他人眼里，程序员简直是“无所不能”的存在啊。<br>不过，这个需求对于程序员来讲，还算是比较正常的，比那些找你“刷QB”、“盗号”什么的强多了。</p><p>要是放到以前下载歌曲，直接回一句“搜百度”完事，近年来歌曲版权逐渐被重视了，一些歌曲逐渐变为会员下载或者收费下载。不过好歹还是可以在线播放的，只要能播放，那想找到歌曲文件就很简单了。</p><p>可以从<strong>开发者工具 - Network</strong> 里找音乐文件的请求链接，或者打开浏览器本地缓存文件夹找大文件。</p><p>为了防止以后有朋友发出重复需求，我决定写一个工具出来。</p><p>这其中涉及到了跨域访问、页面内容抓取，最终决定用<code>express</code>和<code>cheerio</code>来搞，服务端不存在跨域问题。</p><p>试了一些音乐网站的歌曲搜索和播放后，最终把目标瞄准了<strong>酷我音乐</strong>。</p><a id=\"more\"></a><h2 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h2><p>酷我的歌曲搜索就是一个表单提交，页面跳转，服务端直接输出一个包含搜索结果的页面，这个页面的 URL 包含了查询字符串。</p><p><a href=\"http://sou.kuwo.cn/ws/NSearch?type=music&amp;key=曾经的你\" target=\"_blank\" rel=\"external\">http://sou.kuwo.cn/ws/NSearch?type=music&amp;key=曾经的你</a></p><p>字段<code>type</code>表示搜索类型，也就是该页面上的 7 个标签页。</p><p>对应关系如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">all         --综合</div><div class=\"line\">artist      --歌手</div><div class=\"line\">music       --歌曲</div><div class=\"line\">album       --专辑</div><div class=\"line\">mv          --MV</div><div class=\"line\">playlist    --歌单</div><div class=\"line\">lyric       --歌词</div></pre></td></tr></table></figure></p><p>对于目前的需求来说，<code>type=music</code>已经足够了。</p><p><code>key</code>是搜索关键字。该页签下还有一个参数<code>pn</code>表示页数，每页最多显示 25 项，该参数省略表示第一页。</p><p>该页面的搜索列表和分页均为后端直出，想要封装自己的接口只好获取整个页面内容，然后解析 DOM ，组成自己需要的数据。</p><h3 id=\"模版\"><a href=\"#模版\" class=\"headerlink\" title=\"模版\"></a>模版</h3><p>views/index.html</p><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"key\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"曾经的你\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"search\"</span>&gt;</span>搜索<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span> <span class=\"attr\">id</span>=<span class=\"string\">\"list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"page\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://apps.bdimg.com/libs/jquery/1.9.0/jquery.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure><p>模版使用的 ejs。</p><h3 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 页面渲染</span></div><div class=\"line\">app.get(<span class=\"string\">'/'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    res.render(<span class=\"string\">'index'</span>, &#123;</div><div class=\"line\">        <span class=\"attr\">title</span>: <span class=\"string\">'Music'</span></div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 搜索</span></div><div class=\"line\">app.get(<span class=\"string\">'/search/:key/:pn'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure><h3 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h3><p>逻辑很简单，点击搜索时取文本框的值 ajax 请求<code>/search/:key/:pn</code>获取数据渲染<code>#list</code>和<code>#page</code>。</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> $key = $(<span class=\"string\">'#key'</span>),</div><div class=\"line\">        $so = $(<span class=\"string\">'#search'</span>),</div><div class=\"line\">        $list = $(<span class=\"string\">'#list'</span>),</div><div class=\"line\">        $page = $(<span class=\"string\">'#page'</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getData</span>(<span class=\"params\">key, pn</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        $.getJSON(<span class=\"string\">'/search/'</span> + key + <span class=\"string\">'/'</span> + pn, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">// 渲染 #list 和 #page</span></div><div class=\"line\"></div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">search</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> key = $.trim($key.val());</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span>(!key) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        getData(key, <span class=\"number\">1</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    $so.click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        search();</div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    $key.keyup(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(event.keyCode === <span class=\"number\">13</span>) &#123;</div><div class=\"line\">            search();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">&#125;.call(<span class=\"keyword\">this</span>));</div></pre></td></tr></table></figure><p>根据前端的需求，后端输出的数据格式应该是这样的。</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attr\">list</span>: [],</div><div class=\"line\">    <span class=\"attr\">page</span>: <span class=\"string\">''</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>开始封装对应格式的数据。</p><p>通过开发者工具 - Elements 可以找到酷我搜索结果页面的列表和分页的 Dom。可以使用 http 模块去请求这个页面，拿到整个页面文档，使用 cheerio 选取对应的 Dom 来组装成我们需要的数据。</p><figure class=\"image-bubble\"><div class=\"img-lightbox\"><div class=\"overlay\"></div><img src=\"http://static.imys.net/dmn-1.jpg\" alt=\"相关Dom\"></div><div class=\"image-caption\">相关Dom</div></figure><p>歌曲列表的选择器为<code>.m_list ul</code>，分页的选择器为<code>.page</code>。<br>当然，使用类选择器时要确定该类在页面内是唯一的。</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 搜索</span></div><div class=\"line\">app.get(<span class=\"string\">'/search/:key/:pn'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// http://sou.kuwo.cn/ws/NSearch?type=music&amp;key=曾经的你&amp;pn=1</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> key = req.params.key,</div><div class=\"line\">        pn = req.params.pn,</div><div class=\"line\">        option = &#123;</div><div class=\"line\">            <span class=\"attr\">host</span>: <span class=\"string\">'sou.kuwo.cn'</span>,</div><div class=\"line\">            <span class=\"attr\">port</span>: <span class=\"number\">80</span>,</div><div class=\"line\">            <span class=\"attr\">path</span>: <span class=\"string\">'/ws/NSearch?'</span> + querystring.stringify(&#123;</div><div class=\"line\">                <span class=\"attr\">type</span>: <span class=\"string\">'music'</span>,</div><div class=\"line\">                <span class=\"attr\">key</span>: key,</div><div class=\"line\">                <span class=\"attr\">pn</span>: pn</div><div class=\"line\">            &#125;),</div><div class=\"line\">            <span class=\"attr\">method</span>: <span class=\"string\">'GET'</span></div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> req2 = http.request(option, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res2</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">var</span> body = <span class=\"string\">''</span>;</div><div class=\"line\"></div><div class=\"line\">        res2.setEncoding(<span class=\"string\">'utf8'</span>);</div><div class=\"line\">        res2.on(<span class=\"string\">'data'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">            body += data;</div><div class=\"line\">        &#125;);</div><div class=\"line\"></div><div class=\"line\">        res2.on(<span class=\"string\">'end'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">// 解析 html</span></div><div class=\"line\">            <span class=\"keyword\">var</span> $ = cheerio.load(body),</div><div class=\"line\">                $list = $(<span class=\"string\">'.m_list ul li'</span>),</div><div class=\"line\">                $page = $(<span class=\"string\">'.page'</span>),</div><div class=\"line\">                list = [];</div><div class=\"line\"></div><div class=\"line\">            $list.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i, el</span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> $<span class=\"keyword\">this</span> = $(el);</div><div class=\"line\"></div><div class=\"line\">                list.push(&#123;</div><div class=\"line\">                    <span class=\"attr\">id</span>: <span class=\"built_in\">parseInt</span>($<span class=\"keyword\">this</span>.find(<span class=\"string\">'input[name=\"musicNum\"]'</span>).val()),</div><div class=\"line\">                    <span class=\"attr\">name</span>: $<span class=\"keyword\">this</span>.find(<span class=\"string\">'.m_name a'</span>).attr(<span class=\"string\">'title'</span>),</div><div class=\"line\">                    <span class=\"attr\">album</span>: $<span class=\"keyword\">this</span>.find(<span class=\"string\">'.a_name a'</span>).attr(<span class=\"string\">'title'</span>),</div><div class=\"line\">                    <span class=\"attr\">singer</span>: $<span class=\"keyword\">this</span>.find(<span class=\"string\">'.s_name a'</span>).attr(<span class=\"string\">'title'</span>)</div><div class=\"line\">                &#125;);</div><div class=\"line\">            &#125;);</div><div class=\"line\"></div><div class=\"line\">            $page.find(<span class=\"string\">'a'</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i, el</span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> $<span class=\"keyword\">this</span> = $(el),</div><div class=\"line\">                    href = $<span class=\"keyword\">this</span>.attr(<span class=\"string\">'href'</span>);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (href !== <span class=\"string\">'#@'</span>) &#123;</div><div class=\"line\">                    <span class=\"keyword\">var</span> num = href.split(<span class=\"string\">'='</span>).reverse()[<span class=\"number\">0</span>];</div><div class=\"line\">                    $<span class=\"keyword\">this</span>.attr(<span class=\"string\">'data-option'</span>, <span class=\"built_in\">JSON</span>.stringify(&#123;</div><div class=\"line\">                        <span class=\"attr\">key</span>: key,</div><div class=\"line\">                        <span class=\"attr\">pn</span>: num</div><div class=\"line\">                    &#125;));</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                $<span class=\"keyword\">this</span>.attr(<span class=\"string\">'href'</span>, <span class=\"string\">'javascript:;'</span>);</div><div class=\"line\">            &#125;);</div><div class=\"line\"></div><div class=\"line\">            res.send(&#123;</div><div class=\"line\">                <span class=\"attr\">page</span>: $page.html(),</div><div class=\"line\">                <span class=\"attr\">list</span>: list</div><div class=\"line\">            &#125;);</div><div class=\"line\"></div><div class=\"line\">        &#125;);</div><div class=\"line\"></div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    req2.on(<span class=\"string\">'error'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(e);</div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    req2.end();</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure><p>歌曲的数据项取了 id、歌名、专辑、歌手。<br>分页的 Dom 结构比较简单，我直接把分页内的<code>a:href</code>属性替换了，添加自定义数据用于前端点击重渲染，直接返回整个分页的 HTML。</p><p>以上代码引用的模块有<code>http</code>、<code>querystring</code>、<code>cheerio</code>。<br>不得不说<code>cheerio</code>用来爬页面实在是太棒了！</p><p>以上代码在一个请求处理逻辑中又发出 http 请求，显然可以封装出一个请求模块，以备其他地方使用。</p><p>lib/request.js</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">'http'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">options</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> req = http.request(options, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">var</span> body = <span class=\"string\">''</span>;</div><div class=\"line\"></div><div class=\"line\">            res.setEncoding(<span class=\"string\">'utf8'</span>);</div><div class=\"line\">            res.on(<span class=\"string\">'data'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">                body += data;</div><div class=\"line\">            &#125;);</div><div class=\"line\"></div><div class=\"line\">            res.on(<span class=\"string\">'end'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">                resolve(body);</div><div class=\"line\">            &#125;);</div><div class=\"line\"></div><div class=\"line\">        &#125;);</div><div class=\"line\"></div><div class=\"line\">        req.on(<span class=\"string\">'error'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">            reject(e);</div><div class=\"line\">        &#125;);</div><div class=\"line\"></div><div class=\"line\">        req.end();</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>添加一个 request 模块用于 http 请求，以 Promise 方式返回。<br>这样搜索的处理逻辑代码就变成这样。</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">app.get(<span class=\"string\">'/search/:key/:pn'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// http://sou.kuwo.cn/ws/NSearch?type=music&amp;key=曾经的你&amp;pn=1</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> key = req.params.key,</div><div class=\"line\">        pn = req.params.pn,</div><div class=\"line\">        option = &#123;</div><div class=\"line\">            <span class=\"attr\">host</span>: <span class=\"string\">'sou.kuwo.cn'</span>,</div><div class=\"line\">            <span class=\"attr\">port</span>: <span class=\"number\">80</span>,</div><div class=\"line\">            <span class=\"attr\">path</span>: <span class=\"string\">'/ws/NSearch?'</span> + querystring.stringify(&#123;</div><div class=\"line\">                <span class=\"attr\">type</span>: <span class=\"string\">'music'</span>,</div><div class=\"line\">                <span class=\"attr\">key</span>: key,</div><div class=\"line\">                <span class=\"attr\">pn</span>: pn</div><div class=\"line\">            &#125;),</div><div class=\"line\">            <span class=\"attr\">method</span>: <span class=\"string\">'GET'</span></div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\">    request(option).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">body</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// 解析 html</span></div><div class=\"line\">        <span class=\"keyword\">var</span> $ = cheerio.load(body),</div><div class=\"line\">            $list = $(<span class=\"string\">'.m_list ul li'</span>),</div><div class=\"line\">            $page = $(<span class=\"string\">'.page'</span>),</div><div class=\"line\">            list = [];</div><div class=\"line\"></div><div class=\"line\">        $list.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i, el</span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> $<span class=\"keyword\">this</span> = $(el);</div><div class=\"line\"></div><div class=\"line\">            list.push(&#123;</div><div class=\"line\">                <span class=\"attr\">id</span>: <span class=\"built_in\">parseInt</span>($<span class=\"keyword\">this</span>.find(<span class=\"string\">'input[name=\"musicNum\"]'</span>).val()),</div><div class=\"line\">                <span class=\"attr\">name</span>: $<span class=\"keyword\">this</span>.find(<span class=\"string\">'.m_name a'</span>).attr(<span class=\"string\">'title'</span>),</div><div class=\"line\">                <span class=\"attr\">album</span>: $<span class=\"keyword\">this</span>.find(<span class=\"string\">'.a_name a'</span>).attr(<span class=\"string\">'title'</span>),</div><div class=\"line\">                <span class=\"attr\">singer</span>: $<span class=\"keyword\">this</span>.find(<span class=\"string\">'.s_name a'</span>).attr(<span class=\"string\">'title'</span>)</div><div class=\"line\">            &#125;);</div><div class=\"line\">        &#125;);</div><div class=\"line\"></div><div class=\"line\">        $page.find(<span class=\"string\">'a'</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i, el</span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> $<span class=\"keyword\">this</span> = $(el),</div><div class=\"line\">                href = $<span class=\"keyword\">this</span>.attr(<span class=\"string\">'href'</span>);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (href !== <span class=\"string\">'#@'</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> num = href.split(<span class=\"string\">'='</span>).reverse()[<span class=\"number\">0</span>];</div><div class=\"line\">                $<span class=\"keyword\">this</span>.attr(<span class=\"string\">'data-option'</span>, <span class=\"built_in\">JSON</span>.stringify(&#123;</div><div class=\"line\">                    <span class=\"attr\">key</span>: key,</div><div class=\"line\">                    <span class=\"attr\">pn</span>: num</div><div class=\"line\">                &#125;));</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            $<span class=\"keyword\">this</span>.attr(<span class=\"string\">'href'</span>, <span class=\"string\">'javascript:;'</span>);</div><div class=\"line\">        &#125;);</div><div class=\"line\"></div><div class=\"line\">        res.send(&#123;</div><div class=\"line\">            <span class=\"attr\">page</span>: $page.html(),</div><div class=\"line\">            <span class=\"attr\">list</span>: list</div><div class=\"line\">        &#125;);</div><div class=\"line\"></div><div class=\"line\">    &#125;, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(e);</div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure><p>数据有了，开始写前端页面渲染部分。</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getData</span>(<span class=\"params\">key, pn</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    $.getJSON(<span class=\"string\">'/search/'</span> + key + <span class=\"string\">'/'</span> + pn, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">var</span> body = <span class=\"string\">''</span>;</div><div class=\"line\">        data.list.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">v, i</span>) </span>&#123;</div><div class=\"line\">            body +=<span class=\"string\">'&lt;li&gt;&lt;a href=\"download/'</span>+ v.id +<span class=\"string\">'\"&gt;'</span>+ v.name +<span class=\"string\">'  '</span>+ v.album +<span class=\"string\">'  '</span>+ v.singer +<span class=\"string\">'&lt;/a&gt;&lt;/li&gt;'</span>;</div><div class=\"line\">        &#125;);</div><div class=\"line\"></div><div class=\"line\">        $list.html(body);</div><div class=\"line\">        $page.html(data.page);</div><div class=\"line\"></div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>每次调用这个方法都会获取数据渲染列表和分页。<br>歌曲列表的每一项直接使用了 a 链接，点击直接下载歌曲，会有一个新的路由<code>/download/:id</code>。</p><p>分页内的 a 链接已经加上了自定义数据，直接添加点击事件拿到数据调用<code>getData</code>方法。</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">$page.on(<span class=\"string\">'click'</span>, <span class=\"string\">'a[data-option]'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> option = $(<span class=\"keyword\">this</span>).data(<span class=\"string\">'option'</span>);</div><div class=\"line\">    getData(option.key, option.pn);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure><p>至此，搜索加分页就全部完成了。</p><h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>在酷我的页面中点击歌曲名可以跳转到一个歌曲播放页，该页面 URL 格式为<code>http://www.kuwo.cn/yinyue/100062/</code>，其中的 100062 就是歌曲ID了。<br>对于资源文件，直接分析 Network，找到资源文件请求和歌曲ID之间的关系，期望可以直接获取到资源文件的链接。</p><figure class=\"image-bubble\"><div class=\"img-lightbox\"><div class=\"overlay\"></div><img src=\"http://static.imys.net/dmn-2.jpg\" alt=\"酷我Network\"></div><div class=\"image-caption\">酷我Network</div></figure><p>最终分析结果：</p><p>ID100062 的资源文件名是 1058000744.aac。<br>有一个请求 <a href=\"http://antiserver.kuwo.cn/anti.s?rid=MUSIC_100062&amp;format=aac|mp3&amp;type=convert_url&amp;response=url\" target=\"_blank\" rel=\"external\">http://antiserver.kuwo.cn/anti.s?rid=MUSIC_100062&amp;format=aac|mp3&amp;type=convert_url&amp;response=url</a> 的结果为 <a href=\"http://win.web.ra03.sycdn.kuwo.cn/07baab80f0a6dd9b3a091879b308ae68/56c2840e/resource/a1/48/63/96/1058000744.aac\" target=\"_blank\" rel=\"external\">http://win.web.ra03.sycdn.kuwo.cn/07baab80f0a6dd9b3a091879b308ae68/56c2840e/resource/a1/48/63/96/1058000744.aac</a>。</p><p>这样我们直接用歌曲ID去请求<code>http://antiserver.kuwo.cn/anti.s</code>就能获得歌曲链接了。</p><p>酷我的默认请求为<code>.aac</code>格式，应该是和参数<code>format=aac|mp3</code>有关，可以改成<code>format=mp3|aac</code>。</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">app.get(<span class=\"string\">'/download/:id'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// http://antiserver.kuwo.cn/anti.s?rid=MUSIC_100062&amp;format=aac|mp3&amp;type=convert_url&amp;response=url</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> option = &#123;</div><div class=\"line\">        <span class=\"attr\">host</span>: <span class=\"string\">'antiserver.kuwo.cn'</span>,</div><div class=\"line\">        <span class=\"attr\">port</span>: <span class=\"number\">80</span>,</div><div class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">'/anti.s?rid=MUSIC_'</span> + req.params.id + <span class=\"string\">'&amp;format=mp3|aac&amp;type=convert_url&amp;response=url'</span>,</div><div class=\"line\">        <span class=\"attr\">method</span>: <span class=\"string\">'GET'</span></div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    request(option).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">body</span>) </span>&#123;</div><div class=\"line\">        res.redirect(body);</div><div class=\"line\">    &#125;, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(e);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure><p>request 模块又派上用场了，由于该请求直接返回了歌曲链接，我就直接重定向到该链接了。<br>为了使歌曲在新窗口打开，前端页面列表项中的 a 链接要添加<code>target=&quot;_blank&quot;</code>。</p><h2 id=\"成果展示\"><a href=\"#成果展示\" class=\"headerlink\" title=\"成果展示\"></a>成果展示</h2><h3 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h3><figure class=\"image-bubble\"><div class=\"img-lightbox\"><div class=\"overlay\"></div><img src=\"http://static.imys.net/dmn-3.jpg\" alt=\"DownloadMusic\"></div><div class=\"image-caption\">DownloadMusic</div></figure><h3 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h3><p><a href=\"https://github.com/yscoder/DownloadMusic\" target=\"_blank\" rel=\"external\">Github - DownloadMusic</a></p>","categories":[],"tags":[{"name":"Nodejs","path":"api/tags/Nodejs.json"},{"name":"Express","path":"api/tags/Express.json"},{"name":"Cheerio","path":"api/tags/Cheerio.json"}]}