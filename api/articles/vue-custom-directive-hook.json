{"title":"正确使用Vue指令的钩子函数","slug":"vue-custom-directive-hook","date":"2016-12-16T14:45:54.000Z","updated":"2016-12-27T13:42:38.265Z","comments":true,"path":"api/articles/vue-custom-directive-hook.json","excerpt":"<p>在 Vue 中可以把一系列<strong>复杂的操作</strong>包装为一个指令。</p><blockquote><p><strong>什么是复杂的操作？</strong><br>我的理解是：复杂逻辑功能的包装、违背数据驱动的 DOM 操作以及对一些 Hack 手段的掩盖等。我们总是期望以操作数据的形式来实现功能逻辑。</p></blockquote><h2 id=\"钩子函数\"><a href=\"#钩子函数\" class=\"headerlink\" title=\"钩子函数\"></a>钩子函数</h2><p>对于自定义指令的定义，Vue2 有 5 个可选的钩子函数。</p>","content":"<p>在 Vue 中可以把一系列<strong>复杂的操作</strong>包装为一个指令。</p><blockquote><p><strong>什么是复杂的操作？</strong><br>我的理解是：复杂逻辑功能的包装、违背数据驱动的 DOM 操作以及对一些 Hack 手段的掩盖等。我们总是期望以操作数据的形式来实现功能逻辑。</p></blockquote><h2 id=\"钩子函数\"><a href=\"#钩子函数\" class=\"headerlink\" title=\"钩子函数\"></a>钩子函数</h2><p>对于自定义指令的定义，Vue2 有 5 个可选的钩子函数。</p><a id=\"more\"></a><ul><li><code>bind</code>: 只调用一次，指令第一次绑定到元素时调用，用这个钩子函数可以定义一个在绑定时执行一次的初始化动作。</li><li><code>inserted</code>: 被绑定元素插入父节点时调用（父节点存在即可调用，不必存在于 document 中）。</li><li><code>update</code>: 被绑定元素所在的模板更新时调用，而不论绑定值是否变化。</li><li><code>componentUpdated</code>: 被绑定元素所在模板完成一次更新周期时调用。</li><li><code>unbind</code>: 只调用一次，指令与元素解绑时调用。</li></ul><p>接下来，定义一个简单的指令以验证这些钩子函数的触发时机。</p><figure class=\"highlight html\"><figcaption><span>template</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">my-comp</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"msg\"</span> <span class=\"attr\">:msg</span>=<span class=\"string\">\"msg\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-comp</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"update\"</span>&gt;</span>更新<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"uninstall\"</span>&gt;</span>卸载<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"install\"</span>&gt;</span>安装<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption><span>script</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\">Vue.directive(<span class=\"string\">'hello'</span>, &#123;</div><div class=\"line\">    <span class=\"attr\">bind</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">el</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'bind'</span>)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">inserted</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">el</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'inserted'</span>)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">update</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">el</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'update'</span>)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">componentUpdated</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">el</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'componentUpdated'</span>)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">unbind</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">el</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'unbind'</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> myComp = &#123;</div><div class=\"line\">    <span class=\"attr\">template</span>: <span class=\"string\">'&lt;h1 v-hello&gt;&#123;&#123;msg&#125;&#125;&lt;/h1&gt;'</span>,</div><div class=\"line\">    <span class=\"attr\">props</span>: &#123;</div><div class=\"line\">        <span class=\"attr\">msg</span>: <span class=\"built_in\">String</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    <span class=\"attr\">el</span>: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    <span class=\"attr\">data</span>: &#123;</div><div class=\"line\">        <span class=\"attr\">msg</span>: <span class=\"string\">'Hello'</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">components</span>: &#123;</div><div class=\"line\">        <span class=\"attr\">myComp</span>: myComp</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">methods</span>: &#123;</div><div class=\"line\">        <span class=\"attr\">update</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.msg = <span class=\"string\">'Hi'</span></div><div class=\"line\">        &#125;,</div><div class=\"line\">        <span class=\"attr\">uninstall</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.msg = <span class=\"string\">''</span></div><div class=\"line\">        &#125;,</div><div class=\"line\">        <span class=\"attr\">install</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.msg = <span class=\"string\">'Hello'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure><h3 id=\"页面加载时\"><a href=\"#页面加载时\" class=\"headerlink\" title=\"页面加载时\"></a>页面加载时</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">bind</div><div class=\"line\">inserted</div></pre></td></tr></table></figure><h3 id=\"组件更新时\"><a href=\"#组件更新时\" class=\"headerlink\" title=\"组件更新时\"></a>组件更新时</h3><p>点击“更新”按钮，更改数据触发组件更新。</p><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">update</div><div class=\"line\">componentUpdated</div></pre></td></tr></table></figure><h3 id=\"卸载组件时\"><a href=\"#卸载组件时\" class=\"headerlink\" title=\"卸载组件时\"></a>卸载组件时</h3><p>点击“卸载”按钮，数据置空否定判断以触发组件卸载。</p><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">unbind</div></pre></td></tr></table></figure><h3 id=\"重新安装组件时\"><a href=\"#重新安装组件时\" class=\"headerlink\" title=\"重新安装组件时\"></a>重新安装组件时</h3><p>点击“安装”按钮，数据赋值肯定判断以触发组件重新安装。</p><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">bind</div><div class=\"line\">inserted</div></pre></td></tr></table></figure><h3 id=\"区别\"><a href=\"#区别\" class=\"headerlink\" title=\"区别\"></a>区别</h3><p>从案例的运行中，对 5 个钩子函数的触发时机有了初步的认识。存疑的也就是<code>bind</code>和<code>inserted</code>、<code>update</code>和<code>componentUpdated</code>的区别了。</p><h4 id=\"bind-和-inserted\"><a href=\"#bind-和-inserted\" class=\"headerlink\" title=\"bind 和 inserted\"></a>bind 和 inserted</h4><p>据文档所说，插入父节点时调用 inserted，来个测试。</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">bind: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">el</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(el.parentNode)  <span class=\"comment\">// null</span></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'bind'</span>)</div><div class=\"line\">&#125;,</div><div class=\"line\"><span class=\"attr\">inserted</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">el</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(el.parentNode)  <span class=\"comment\">// &lt;div id=\"app\"&gt;...&lt;/div&gt;</span></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'inserted'</span>)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>分别在两个钩子函数中输出父节点：<strong>bind 时父节点为 null，inserted 时父节点存在</strong>。</p><h4 id=\"update-和-componentUpdated\"><a href=\"#update-和-componentUpdated\" class=\"headerlink\" title=\"update 和 componentUpdated\"></a>update 和 componentUpdated</h4><p>关于这两个的介绍，从字眼上看感觉是组件更新周期有关，继续验证。</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">update: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">el</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(el.innerHTML)   <span class=\"comment\">// Hello</span></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'update'</span>)</div><div class=\"line\">&#125;,</div><div class=\"line\"><span class=\"attr\">componentUpdated</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">el</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(el.innerHTML)   <span class=\"comment\">// Hi</span></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'componentUpdated'</span>)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>没毛病，<strong>update 和 componentUpdated 就是组件更新前和更新后的区别</strong>。</p><h3 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h3><p>文档说的没错…😒<br><a href=\"https://jsfiddle.net/imys/twbv0sov/1/\" target=\"_blank\" rel=\"external\">Demo</a></p><h2 id=\"最佳实践\"><a href=\"#最佳实践\" class=\"headerlink\" title=\"最佳实践\"></a>最佳实践</h2><p>根据需求的不同，我们要选择恰当的时机去初始化指令、更新指令调用参数以及释放指令存在时的内存占用等。</p><p>比较常见的场景是：用指令包装一些无依赖的第三方库以扩展组件功能。而一个健壮的库通常会包含：初始化实例、参数更新和释放实例资源占用等操作。</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">Vue.directive(<span class=\"string\">'hello'</span>, &#123;</div><div class=\"line\">    <span class=\"attr\">bind</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">el, binding</span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// 在 bind 钩子中初始化库实例</span></div><div class=\"line\">        <span class=\"comment\">// 如果需要使用父节点，也可以在 inserted 钩子中执行</span></div><div class=\"line\">        el.__library__ = <span class=\"keyword\">new</span> Library(el, binding.value)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">update</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">el, binding</span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// 模版更新意味着指令的参数可能被改变，这里可以对库实例的参数作更新</span></div><div class=\"line\">        <span class=\"comment\">// 酌情使用 update 或 componentUpdated 钩子</span></div><div class=\"line\">        el.__library__.setOptions(<span class=\"built_in\">Object</span>.assign(binding.oldValue, binding.value))</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">unbind</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">el</span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// 释放实例</span></div><div class=\"line\">        el.__library__.destory()</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>","categories":[],"tags":[{"name":"Vue","path":"api/tags/Vue.json"},{"name":"VueDirective","path":"api/tags/VueDirective.json"}]}