{"title":"获取移动设备旋转方向的几个方案","slug":"screen-rotation-case","date":"2016-06-22T01:02:03.000Z","updated":"2017-08-20T13:57:23.790Z","comments":true,"path":"api/articles/screen-rotation-case.json","excerpt":"<p>某些偏门的 API 真是没有需求一辈子都不知道啊。</p><p>分享一下最近对于获取移动设备旋转方向的探索。</p><h2 id=\"deviceorientation\"><a href=\"#deviceorientation\" class=\"headerlink\" title=\"deviceorientation\"></a>deviceorientation</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'deviceorientation'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">'absolute: '</span> + e.absolute)</div><div class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">'alpha: '</span> + e.alpha)</div><div class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">'beta: '</span> + e.beta)</div><div class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">'gamma: '</span> + e.gamma)</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure><p>之前在 segmentfault 回答过相关问题，当时是从 MDN 翻出了这个事件。</p><p><a href=\"https://segmentfault.com/q/1010000005630022?share_user=1030000002791361\">原贴：h5 页面如何获取手机陀螺仪的参数</a></p><p>该事件在移动端兼容较好：Android Webview 4.3+、Chrome for Android 5.0、iOS 8.4+，据我测试微信也是支持的。<br>没有在低端机上测试过，可能该事件会依赖设备传感器，可以加个 <code>&#39;ondeviceorientation&#39; in window</code> 判断一下。</p><p>该事件触发频率高，适合对设备旋转精度要求较高的场景或是 3d 场景等，比如上面问题中的平衡球。<br>","content":"<p>某些偏门的 API 真是没有需求一辈子都不知道啊。</p><p>分享一下最近对于获取移动设备旋转方向的探索。</p><h2 id=\"deviceorientation\"><a href=\"#deviceorientation\" class=\"headerlink\" title=\"deviceorientation\"></a>deviceorientation</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'deviceorientation'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</div><div class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">'absolute: '</span> + e.absolute)</div><div class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">'alpha: '</span> + e.alpha)</div><div class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">'beta: '</span> + e.beta)</div><div class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">'gamma: '</span> + e.gamma)</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure><p>之前在 segmentfault 回答过相关问题，当时是从 MDN 翻出了这个事件。</p><p><a href=\"https://segmentfault.com/q/1010000005630022?share_user=1030000002791361\" target=\"_blank\" rel=\"external\">原贴：h5 页面如何获取手机陀螺仪的参数</a></p><p>该事件在移动端兼容较好：Android Webview 4.3+、Chrome for Android 5.0、iOS 8.4+，据我测试微信也是支持的。<br>没有在低端机上测试过，可能该事件会依赖设备传感器，可以加个 <code>&#39;ondeviceorientation&#39; in window</code> 判断一下。</p><p>该事件触发频率高，适合对设备旋转精度要求较高的场景或是 3d 场景等，比如上面问题中的平衡球。<br><a id=\"more\"></a></p><h2 id=\"orientationchange\"><a href=\"#orientationchange\" class=\"headerlink\" title=\"orientationchange\"></a>orientationchange</h2><blockquote><p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Events/orientationchange\" target=\"_blank\" rel=\"external\">当设备的方向改变时，触发该事件。</a></p></blockquote><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">\"orientationchange\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'angle: '</span> + screen.orientation.angle);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure><p>该事件是基于 2d 平面角度触发，输出仅有 <code>0、90、270</code> 3个数值，可以用来知晓当前设备的手持方向。<br>至于为什么没有 360 这个角度，可能跟设备有关。我的手机怎么转都到不了 360 度，也就是竖屏时无法翻转。</p><p>触发这个事件需要设备开启屏幕旋转，或者叫屏幕锁定，不同的设备叫法不一样。</p><p>兼容性是个大问题，目前只发现手机上的 Chrome 可以使用，微信、iOS、以及一些双核国产浏览器都不兼容。</p><h2 id=\"screen-orientation\"><a href=\"#screen-orientation\" class=\"headerlink\" title=\"screen.orientation\"></a>screen.orientation</h2><p>通过上个事件让我发现了<code>screen.orientation</code>，在控制台输出后，发现它也有事件支持。</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">console</span>.log(screen.orientation)  <span class=\"comment\">// &#123;angle: 0, type: \"landscape-primary\", onchange: null&#125;</span></div><div class=\"line\"></div><div class=\"line\">screen.orientation.onchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'angle: '</span> + screen.orientation.angle);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>通过对该对象输出，发现也可以使用 screen.orientation.type 判断设备方向。</p><ul><li>landscape-primary | landscape-secondary：横屏；</li><li>portrait-primary | portrait-secondary: 竖屏；</li><li>primary 表示向上或向右，secondary 表示向左或向下。</li></ul><p>之后测试该事件，手机 Chrome 和国产双核浏览器通过，生产环境下使用还不够理想。</p><h2 id=\"window-onresize\"><a href=\"#window-onresize\" class=\"headerlink\" title=\"window.onresize\"></a>window.onresize</h2><p>完全是灵机一动想到的，设备旋转会使屏幕宽高置换，自然就会触发 resize 事件。</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">window</span>.onresize = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'innerWidth: '</span> + <span class=\"keyword\">this</span>.innerWidth + <span class=\"string\">' innerHeight: '</span> + <span class=\"keyword\">this</span>.innerHeight);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>通过屏幕宽高比较来判断横屏还是竖屏，设备兼容度毋容置疑。</p><h2 id=\"Media-Queries\"><a href=\"#Media-Queries\" class=\"headerlink\" title=\"Media Queries\"></a>Media Queries</h2><p>最后就是 css3 媒体查询了。</p><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">media</span> screen and (orientation: portrait)&#123;</div><div class=\"line\">    <span class=\"comment\">/* 横屏 */</span></div><div class=\"line\">&#125;</div><div class=\"line\">@<span class=\"keyword\">media</span> screen and (orientation: landscape)&#123;</div><div class=\"line\">    <span class=\"comment\">/* 竖屏 */</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>如果仅仅是为了针对屏幕方向添加样式的话，使用媒体查询是最佳方案了。</p><p>移动端使用也没有兼容问题，媒体查询从 IE9 就开始支持了。</p><h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p><a href=\"/demo/screenRotation.html\">Demo</a></p><figure class=\"image-bubble\"><div class=\"img-lightbox\"><div class=\"overlay\"></div><img src=\"http://static.imys.net/1466565951.png\" alt=\"测试Demo\"></div><div class=\"image-caption\">测试Demo</div></figure>","categories":[],"tags":[{"name":"Html5","path":"api/tags/Html5.json"},{"name":"Mobile","path":"api/tags/Mobile.json"},{"name":"deviceorientation","path":"api/tags/deviceorientation.json"},{"name":"orientation","path":"api/tags/orientation.json"}]}