{"title":"gulp改善工作流记录","slug":"use-gulp-front-building-exp","date":"2015-10-22T02:37:53.000Z","updated":"2016-11-12T19:29:42.994Z","comments":true,"path":"api/articles/use-gulp-front-building-exp.json","excerpt":"<p>上个月向领导提出的<a href=\"../20150908/gulp-ejs-module.html\">使用gulp+ejs模块化html</a>最近得到了实施，大概记录下此次改造工作。</p>","content":"<p>上个月向领导提出的<a href=\"../20150908/gulp-ejs-module.html\">使用gulp+ejs模块化html</a>最近得到了实施，大概记录下此次改造工作。</p><a id=\"more\"></a><h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><pre><code>html\n  -dest\n    --Folder\n    --index.html\n    --...\n  -src\n    --Folder\n    --Modules\n      ---header.html\n      ---...\n    --index.html\n    --...\nstatic\n  -dest\n    --css\n    --js\n    --img\n  -src\n    --css\n    --js\n    --img\n    --less\nnode_modules\ngulpfile.js\npackage.json\n</code></pre><h2 id=\"gulp模块\"><a href=\"#gulp模块\" class=\"headerlink\" title=\"gulp模块\"></a>gulp模块</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>),  </div><div class=\"line\">    less = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-less'</span>),  </div><div class=\"line\">    minifycss = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minify-css'</span>),    </div><div class=\"line\">    jshint = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-jshint'</span>),   </div><div class=\"line\">    uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>),   </div><div class=\"line\">    imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-imagemin'</span>),   </div><div class=\"line\">    pngquant = <span class=\"built_in\">require</span>(<span class=\"string\">'imagemin-pngquant'</span>),    </div><div class=\"line\">    rename = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-rename'</span>),    </div><div class=\"line\">    notify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-notify'</span>),    </div><div class=\"line\">    browserSync = <span class=\"built_in\">require</span>(<span class=\"string\">'browser-sync'</span>), </div><div class=\"line\">    ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-ejs'</span>),          </div><div class=\"line\">    changed = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-changed'</span>),  </div><div class=\"line\">    replace = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-replace'</span>);</div></pre></td></tr></table></figure><p><code>html</code>选择了<code>ejs</code>来管理，<code>css</code>预处理选择了<code>less</code>。<br>简单、实用！</p><p>对于浏览器同步工具，本来使用的是<code>live-reload</code>，在初次使用中感觉不是很顺畅，之后换成了<code>browserSync</code>。<br>browserSync 除了文件更改实时刷新浏览器外，还有多设备同步功能，通过可视化控制台可以实时测试移动端代码。<br>对比而言，live-reload 依赖 Chrome 及 LiveReload 插件，应该是借助 Chrome 的某种开放接口实现的。<br>而 browserSync 是基于虚拟服务器的，所有可以实现多设备的控制。</p><h2 id=\"工作流\"><a href=\"#工作流\" class=\"headerlink\" title=\"工作流\"></a>工作流</h2><p>编写html、less、js =&gt; 浏览器访问（URL对应html文件目录） =&gt; 浏览器显示编译后的html、css、js =&gt; html已经过模板合并，<code>include</code>等关键字是没有的 =&gt; css是less编译生成的，页面从始至终引用的都是 css 文件，不过会有一个对应的同名 less 文件。</p><p>改造进行阶段也没遇到什么太大问题，能遇到的问题也都能在github中找到答案。<br>不过还是要根据各自团队的项目情况因地制宜，合理配置。</p>","categories":[],"tags":[{"name":"Gulp","path":"api/tags/Gulp.json"},{"name":"前端构建","path":"api/tags/前端构建.json"}]}