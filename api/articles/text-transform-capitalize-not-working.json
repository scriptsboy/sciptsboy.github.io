{"title":"关于 text-transform: capitalize 失效的场景与解决方案","slug":"text-transform-capitalize-not-working","date":"2016-10-31T05:39:02.000Z","updated":"2016-11-12T19:41:28.738Z","comments":true,"path":"api/articles/text-transform-capitalize-not-working.json","excerpt":"<p><code>text-transform</code> 是一个可以将文字进行大小写转换或单词首字符大写的 CSS 属性。自从知道了它，我就开始偷懒不在 js 中去在调用相关的转换函数了。</p><p>昨天在给多说扩展用户 UA 功能时遇到一个 <code>text-transform: capitalize</code> 失效的问题，经过一番测试，找到了问题的原因。<br>","content":"<p><code>text-transform</code> 是一个可以将文字进行大小写转换或单词首字符大写的 CSS 属性。自从知道了它，我就开始偷懒不在 js 中去在调用相关的转换函数了。</p><p>昨天在给多说扩展用户 UA 功能时遇到一个 <code>text-transform: capitalize</code> 失效的问题，经过一番测试，找到了问题的原因。<br><a id=\"more\"></a></p><h2 id=\"场景还原\"><a href=\"#场景还原\" class=\"headerlink\" title=\"场景还原\"></a>场景还原</h2><p>根据当时场景，抽取关键 css 属性：</p><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.capitalize</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">text-transform</span>: capitalize</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.before</span><span class=\"selector-pseudo\">:before</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">'hello'</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.after</span><span class=\"selector-pseudo\">:after</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">'world'</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>现有如下的 HTML，你们猜最终会是什么结果？</p><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"capitalize\"</span>&gt;</span>hello world<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"capitalize\"</span>&gt;</span>HELLO WORLD<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"capitalize before\"</span>&gt;</span>world<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"capitalize after\"</span>&gt;</span>hello<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div></pre></td></tr></table></figure><p>结果：</p><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">Hello World</div><div class=\"line\">HELLO WORLD</div><div class=\"line\">Helloworld</div><div class=\"line\">Helloworld</div></pre></td></tr></table></figure><p>问题DEMO链接：<a href=\"https://jsfiddle.net/imys/2mb9ykL3/\" target=\"_blank\" rel=\"external\">text-transform: capitalize 失效demo</a></p><h2 id=\"问题解析\"><a href=\"#问题解析\" class=\"headerlink\" title=\"问题解析\"></a>问题解析</h2><p>通过运行结果可以发现全小写单词组合时，转换没有任何问题，略过。</p><h3 id=\"大写单词组合\"><a href=\"#大写单词组合\" class=\"headerlink\" title=\"大写单词组合\"></a>大写单词组合</h3><p>全大写单词组合，转换失效？真的是这样吗？</p><p>通过查阅相关文档，关于 <code>capitalize</code> 的介绍为：<strong>将每个单词的第一个字母转换成大写</strong>。<br>看来是我们对它期望太高了，<code>text-transform: capitalize</code>并不能像 <code>lodash</code> 库中的转换函数那样，将全大写的的 <code>AAA</code> 转换成你期望的 <code>Aaa</code>。</p><h3 id=\"含有伪元素\"><a href=\"#含有伪元素\" class=\"headerlink\" title=\"含有伪元素\"></a>含有伪元素</h3><p>这也是我面临到的问题，每个 UA 标签上的 tootip 都是我用伪类模拟的。<br>由于当时伪元素是绝对定位的，在视觉上真的是当作了另外的元素看待。</p><p>而在问题 DEMO 中，我们还原了伪元素默认显示的位置：<code>:before</code> 就是在原始内容前追加内容，<code>:after</code> 就是在原始内容后追加内容。<br><strong>由于最后生成的内容之间没有间隙，导致 <code>text-transform</code> 转换时将其当作一个单词。</strong></p><p>为了验证我的结论，我在含有伪元素的内容前或后加了个空格：</p><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"capitalize before\"</span>&gt;</span> world<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"capitalize after\"</span>&gt;</span>hello <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div></pre></td></tr></table></figure><p>最后转换成功：</p><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">Hello World</div><div class=\"line\">Hello World</div></pre></td></tr></table></figure><p><a href=\"https://jsfiddle.net/imys/2mb9ykL3/1/\" target=\"_blank\" rel=\"external\">DEMO</a></p><h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>虽然找到了问题的原因，但是实际场景中使用伪元素的初衷就是要将一个元素当作多个元素使用，HTML 中加空格会有半个中文字符宽度的空白，也就等于产生了不必要的边距。</p><p>做到这里真是感觉不如直接写个 js 转换函数算了。</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">capitalize</span>(<span class=\"params\">string</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> string.charAt(<span class=\"number\">0</span>).toUpperCase() + string.substr(<span class=\"number\">1</span>).toLowerCase()</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>写出来后忽然发现这段代码完全可以用 CSS 去“实现”。</p><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.capitalize</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">text-transform</span>: lowercase;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.capitalize</span><span class=\"selector-pseudo\">:first-letter</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">text-transform</span>: uppercase;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>上个月旭哥博客有篇很详细的 <code>:first-letter</code> 介绍：<a href=\"http://www.zhangxinxu.com/wordpress/2016/09/css-first-letter-pseudo-element/\" target=\"_blank\" rel=\"external\">张鑫旭：深入CSS :first-letter伪元素及其实例等</a></p><p>其中提到了 <code>:first-letter</code> 和 <code>:before</code> 之间的猫腻，就是说 <code>:first-letter</code> 也生效于 <code>:before</code> 伪元素。<br>不过我测试后发现，<strong>当 <code>:before</code> 伪元素设置为绝对定位时，<code>:first-letter</code>将只作用于原始内容</strong>。</p><p><a href=\"https://jsfiddle.net/imys/x4ntopqr/\" target=\"_blank\" rel=\"external\">:first-letter和:before示例demo</a></p><p>利用这个机制，总算可以给自己一个完美的答复了。</p><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.capitalize</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">text-transform</span>: capitalize</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.before</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">2.5em</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.before</span><span class=\"selector-pseudo\">:before</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</div><div class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">'hello'</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.before</span><span class=\"selector-pseudo\">:first-letter</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">text-transform</span>: uppercase</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.after</span><span class=\"selector-pseudo\">:after</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">'world'</span>;</div><div class=\"line\">  <span class=\"attribute\">text-transform</span>: capitalize</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><ul><li>附加内容在 <code>:before</code> 时，使用 <code>:first-letter</code> + <code>uppercase</code> 解决，如果原始内容有大写，需要再给原标签加 <code>lowercase</code>；</li><li>附加内容在 <code>:after</code> 时，给 <code>:after</code> 再加 <code>capitalize</code>。</li></ul><p><a href=\"https://jsfiddle.net/imys/2mb9ykL3/2/\" target=\"_blank\" rel=\"external\">DEMO</a></p><h2 id=\"End\"><a href=\"#End\" class=\"headerlink\" title=\"End\"></a>End</h2>","categories":[],"tags":[{"name":"CSS","path":"api/tags/CSS.json"},{"name":"CSS3","path":"api/tags/CSS3.json"},{"name":"text-transform","path":"api/tags/text-transform.json"},{"name":"capitalize","path":"api/tags/capitalize.json"}]}