{"title":"获取隐藏元素的高度","slug":"get-height-of-hidden-element","date":"2016-12-08T02:15:25.000Z","updated":"2016-12-08T11:42:59.785Z","comments":true,"path":"api/articles/get-height-of-hidden-element.json","excerpt":"<p>当一个元素的样式被设置了<code>display: none</code>时，它的高度相关属性值为 0。<br>这是因为修改<code>display</code>属性会触发元素的重排和重绘，而元素重排时将会重新计算它的一些属性值。被设置<code>display: none</code>的元素不占用文档空间，自然计算到的高度值为 0。</p><blockquote><p>关于重排和重绘：<a href=\"https://xdlrt.github.io/2016/11/05/2016-11-05/\">重绘重排重渲染 - Icarus</a></p></blockquote>","content":"<p>当一个元素的样式被设置了<code>display: none</code>时，它的高度相关属性值为 0。<br>这是因为修改<code>display</code>属性会触发元素的重排和重绘，而元素重排时将会重新计算它的一些属性值。被设置<code>display: none</code>的元素不占用文档空间，自然计算到的高度值为 0。</p><blockquote><p>关于重排和重绘：<a href=\"https://xdlrt.github.io/2016/11/05/2016-11-05/\" target=\"_blank\" rel=\"external\">重绘重排重渲染 - Icarus</a></p></blockquote><a id=\"more\"></a><h2 id=\"隐藏元素的方式\"><a href=\"#隐藏元素的方式\" class=\"headerlink\" title=\"隐藏元素的方式\"></a>隐藏元素的方式</h2><p>“隐藏”元素的方式有多种，除了设置<code>display: none</code>以外，还有<code>visibility: hidden</code>、<code>opacity: 0</code>、<code>height: 0; overflow: hidden</code>、<code>transform: scale(0)</code>等。</p><p><strong>为什么这里我把“隐藏”加了引号？</strong></p><p>因为上面提到的各种方式，有“真实隐藏”和“视觉隐藏”之分。这应该不难理解，比如<code>visibility: hidden</code>和<code>opacity: 0</code>虽然视觉上看不到，可元素还是在文档流中占用了位置。</p><p>视觉隐藏的元素可以直接获取到元素的高度，所以我们要解决的问题主要还是设置<code>display: none</code>的元素。</p><h2 id=\"头脑风暴\"><a href=\"#头脑风暴\" class=\"headerlink\" title=\"头脑风暴\"></a>头脑风暴</h2><p>解决问题的关键在于透彻的分析问题。</p><ol><li>因为我们隐藏了元素，所以获取不到元素的高度。</li><li>我们想要获取“隐藏”元素的高度做一些事。</li><li>有没有一种“隐藏”元素的方式具有<code>display: none</code>的特征，且可以获取高度。</li></ol><p>OK。我们找到了一种可行性探索方案，接下来只要去验证各种隐藏元素的方式应该就能解决问题了。</p><h2 id=\"scrollHeight\"><a href=\"#scrollHeight\" class=\"headerlink\" title=\"scrollHeight\"></a>scrollHeight</h2><p>设置<code>overflow: hidden</code>可以根据元素高度裁剪视区，设置<code>height: 0; overflow: hidden</code>虽然文档流中占用了位置，由于高度为 0，最终表现特征达到了我们期望的<code>display: none</code>。</p><p>此时该元素<code>clientHeight</code>、<code>offsetHeight</code>为 0，但是<code>scrollHeight</code>是有值的。</p><ul><li><code>scrollHeight</code>是一个元素没有滚动条时的所有内容高度</li><li>当一个元素没有滚动条时<code>scrollHeight === offsetHeight</code></li></ul><p>当你有“获取隐藏元素的高度”这个需求时，真实目地其实就是要<strong>获取一个元素没有滚动条时的所有内容高度</strong>。否则固定高度加滚动条的情况下，高度是已知的，不会产生这个需求。<br>也就是说<code>scrollHeight</code>就是我们最后想要得到的值。</p><h2 id=\"case\"><a href=\"#case\" class=\"headerlink\" title=\"case\"></a>case</h2><p>最后，容我一猜，当你有这个需求时，也许是要实现这样的效果吧：<a href=\"https://jsfiddle.net/imys/9ed940ke/1/\" target=\"_blank\" rel=\"external\">SlideDown</a></p>","categories":[],"tags":[{"name":"scrollHeight","path":"api/tags/scrollHeight.json"},{"name":"display","path":"api/tags/display.json"},{"name":"height","path":"api/tags/height.json"},{"name":"overflow","path":"api/tags/overflow.json"},{"name":"SlideDown","path":"api/tags/SlideDown.json"}]}