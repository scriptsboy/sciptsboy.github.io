{"title":"如何在Vue2中使用双向绑定？","slug":"vue2-two-way-binding","date":"2017-01-19T11:30:01.000Z","updated":"2017-01-19T13:04:45.718Z","comments":true,"path":"api/articles/vue2-two-way-binding.json","excerpt":"<p>Vue2 取消了<code>.sync</code>指令修饰符，推崇单向闭环的数据流。即：父级通过<code>props</code>向子级传递数据，子级如果需要修改数据就需要在父级添加监听事件，并在子级中去触发事件修改值。</p><p>在多数情况下，是不需要双向绑定的，单向数据流更容易追踪数据变化排查问题。但一些特定场景下，如弹窗，除了外部由父组件控制显示和隐藏外，组件内部也有关闭和取消等按钮需要控制显示和隐藏。这虽然可以通过触发事件让父级修改显示状态来实现，但每一个弹窗组件都需要做一遍这样的事总觉得很不爽。<br>","content":"<p>Vue2 取消了<code>.sync</code>指令修饰符，推崇单向闭环的数据流。即：父级通过<code>props</code>向子级传递数据，子级如果需要修改数据就需要在父级添加监听事件，并在子级中去触发事件修改值。</p><p>在多数情况下，是不需要双向绑定的，单向数据流更容易追踪数据变化排查问题。但一些特定场景下，如弹窗，除了外部由父组件控制显示和隐藏外，组件内部也有关闭和取消等按钮需要控制显示和隐藏。这虽然可以通过触发事件让父级修改显示状态来实现，但每一个弹窗组件都需要做一遍这样的事总觉得很不爽。<br><a id=\"more\"></a></p><h2 id=\"v-model\"><a href=\"#v-model\" class=\"headerlink\" title=\"v-model\"></a>v-model</h2><p><code>v-model</code>是 Vue2 中唯一支持双向绑定的指令，用于表单控件绑定，但不代表它只能用在表单控件之上。在文档 <a href=\"https://vuefe.cn/v2/guide/components.html#使用自定义事件的表单输入组件\" target=\"_blank\" rel=\"external\">使用自定义事件的表单输入组件</a> 一节中提到了，<code>v-model</code>其实是个语法糖。</p><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"something\"</span>&gt;</span></div><div class=\"line\"><span class=\"comment\">&lt;!-- 等价于以下内容 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">:value</span>=<span class=\"string\">\"something\"</span> @<span class=\"attr\">input</span>=<span class=\"string\">\"something = $event.target.value\"</span>&gt;</span></div></pre></td></tr></table></figure><p>也就是说，你只需要在组件中声明一个<code>name</code>为<code>value</code>的<code>props</code>，并且通过触发<code>input</code>事件传入一个值，就能修改这个<code>value</code>。</p><figure class=\"highlight html\"><figcaption><span>父组件中引用</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">myComponent</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"title\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">myComponent</span>&gt;</span></div></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption><span>子组件</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> myComponent = &#123;</div><div class=\"line\">    <span class=\"attr\">template</span>: <span class=\"string\">'&lt;div&gt;&lt;h1&gt;&#123;&#123;value&#125;&#125;&lt;/h1&gt;&lt;button @click=\"changeTitle\"&gt;Change&lt;/button&gt;&lt;/div&gt;'</span>,</div><div class=\"line\">    <span class=\"attr\">props</span>: &#123;</div><div class=\"line\">        <span class=\"attr\">value</span>: <span class=\"built_in\">String</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">methods</span>: &#123;</div><div class=\"line\">        changeTitle() &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'input'</span>, <span class=\"string\">'子组件'</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>上面这个例子，最初显示的是父组件传入的<code>title</code>，点击子组件中的按钮后会修改显示值为<code>子组件</code>。</p><h2 id=\"组件内部控制关闭的弹窗\"><a href=\"#组件内部控制关闭的弹窗\" class=\"headerlink\" title=\"组件内部控制关闭的弹窗\"></a>组件内部控制关闭的弹窗</h2><p>现在可以解决弹窗组件内部自行关闭的问题了。</p><p><a href=\"https://jsfiddle.net/imys/279fo449/\" target=\"_blank\" rel=\"external\">Demo</a></p><h2 id=\"多字段的双向绑定\"><a href=\"#多字段的双向绑定\" class=\"headerlink\" title=\"多字段的双向绑定\"></a>多字段的双向绑定</h2><blockquote><p>一个组件只能定义一个<code>v-model</code>，假如想双向绑定多个值怎么办？</p></blockquote><p><code>v-model</code>并没有限制<code>value</code>的数据类型，只是限制了是<strong>一个值！</strong>那么只需要把<code>value</code>的数据类型换成<code>Object</code>或者<code>Array</code>，把多出的字段作为对象的属性或数组的元素传入，多少个都不是问题了。</p><p>从最佳实践角度出发，推荐只是特定场景下使用，比如自定义的表单组件。</p>","categories":[],"tags":[{"name":"Vue","path":"api/tags/Vue.json"}]}