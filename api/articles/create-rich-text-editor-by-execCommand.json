{"title":"基于 document.execCommand 实现富文本编辑器","slug":"create-rich-text-editor-by-execCommand","date":"2017-01-12T16:30:09.000Z","updated":"2017-08-20T13:57:23.727Z","comments":true,"path":"api/articles/create-rich-text-editor-by-execCommand.json","excerpt":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>最近在项目中准备集成一个富文本编辑器，原来使用的是 <a href=\"https://github.com/quilljs/quill\">Quill</a>，之后发现项目打包体积瞬增了 200kb。虽然 Quill 完全能够满足项目需求，但其提供的诸多功能是用不上的，可以使用更轻量的实现代替。</p><p>在寻找新的替代品时，也顺便瞄了下各种编辑器的内部实现。一些体积庞大的编辑器一般都兼容低版本浏览器，不得不写很多兼容性的代码。而一些 MINI、轻量的编辑器是不对低端浏览器作兼容的，使用<code>Selection</code>、<code>Range</code>或者<code>document.execCommand</code>实现。</p><p>之前在 <a href=\"https://imys.net/20161125/cursor-offset-at-input.html\">JavaScript 获取输入时的光标位置及场景问题</a> 中提到过<code>Selection</code>和<code>Range</code>，这次就说说<code>document.execCommand</code>。</p>","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>最近在项目中准备集成一个富文本编辑器，原来使用的是 <a href=\"https://github.com/quilljs/quill\" target=\"_blank\" rel=\"external\">Quill</a>，之后发现项目打包体积瞬增了 200kb。虽然 Quill 完全能够满足项目需求，但其提供的诸多功能是用不上的，可以使用更轻量的实现代替。</p><p>在寻找新的替代品时，也顺便瞄了下各种编辑器的内部实现。一些体积庞大的编辑器一般都兼容低版本浏览器，不得不写很多兼容性的代码。而一些 MINI、轻量的编辑器是不对低端浏览器作兼容的，使用<code>Selection</code>、<code>Range</code>或者<code>document.execCommand</code>实现。</p><p>之前在 <a href=\"https://imys.net/20161125/cursor-offset-at-input.html\">JavaScript 获取输入时的光标位置及场景问题</a> 中提到过<code>Selection</code>和<code>Range</code>，这次就说说<code>document.execCommand</code>。</p><a id=\"more\"></a><h2 id=\"document-execCommand\"><a href=\"#document-execCommand\" class=\"headerlink\" title=\"document.execCommand\"></a>document.execCommand</h2><p>该方法可以对可编辑器区域进行操作，比如加粗文字、改变字号、插入链接等。可编辑区域也就是设置了<code>contentEditable</code>属性的元素。</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 语法</span></div><div class=\"line\">bool = <span class=\"built_in\">document</span>.execCommand(commandName, showDefaultUI[, arg])</div></pre></td></tr></table></figure><ul><li><code>commandName</code>：String，命令的名称</li><li><code>showDefaultUI</code>：Boolean，是否展示用户界面（暂时没有发现“用户界面”指的是什么），一般为<code>false</code></li><li><code>arg</code>：String，要传递的参数，比如插入链接需要传入一个 URL，可选</li><li>返回值：Boolean，表示操作是否支持或是否启用</li></ul><p>假如要把选中的文字加粗，只需要这样：</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">document</span>.execCommand(<span class=\"string\">'bold'</span>, <span class=\"literal\">false</span>)</div></pre></td></tr></table></figure><h2 id=\"兼容性\"><a href=\"#兼容性\" class=\"headerlink\" title=\"兼容性\"></a>兼容性</h2><figure class=\"image-bubble\"><div class=\"img-lightbox\"><div class=\"overlay\"></div><img src=\"http://static.imys.net/execCommand-support-2017113.jpg\" alt=\"execCommand-support\"></div><div class=\"image-caption\">execCommand-support</div></figure><p>对于现代浏览器的兼容度较好，不过 Android 53 取消兼容的什么鬼？</p><p>除了了解该方法的兼容性外，还需要了解每一种可执行命令的兼容性。比如<code>decreaseFontSize</code>，给选中文字添加<code>small</code>标签，也就是小号字体，谷歌是不支持的。</p><p>可以使用以下方法检测命令是否在浏览器中支持：</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">document</span>.queryCommandSupported(commandName)</div></pre></td></tr></table></figure><h2 id=\"简陋的实现\"><a href=\"#简陋的实现\" class=\"headerlink\" title=\"简陋的实现\"></a>简陋的实现</h2><p>不到 50 行代码，<a href=\"/demo/cmdEditor.html\">基于document.execCommand实现富文本编辑器</a>。</p><p>有兴趣的同学可以以此为出发点，去开发一个具备完整功能的编辑器。懒得折腾的可以像我一样多搜索几下，找一个合适的轮子。😅</p><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul><li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Document/execCommand\" target=\"_blank\" rel=\"external\">MDN: document.execCommand</a></li></ul>","categories":[],"tags":[{"name":"JavaScript","path":"api/tags/JavaScript.json"},{"name":"Editor","path":"api/tags/Editor.json"},{"name":"ExecCommand","path":"api/tags/ExecCommand.json"}]}