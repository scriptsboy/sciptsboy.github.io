{"title":"iconfont兼容与维护","slug":"iconfont-maintained","date":"2015-12-23T05:47:34.000Z","updated":"2016-11-12T19:13:47.620Z","comments":true,"path":"api/articles/iconfont-maintained.json","excerpt":"<p>在扁平化网页设计中，字体图标有着很好的易用性。结合一年的实际运用，来做一下总结。</p>","content":"<p>在扁平化网页设计中，字体图标有着很好的易用性。结合一年的实际运用，来做一下总结。</p><a id=\"more\"></a><h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>可以直接引用开源的第三方字体样式文件，如<code>Font Awesome</code>等。<br>或者你想要构建一套产品专属的图标，可以注册一个字体图标库，添加一个图标项目，进行创作和使用。</p><p>我司使用的字体库是<a href=\"http://www.iconfont.cn/\" target=\"_blank\" rel=\"external\">阿里的iconfont</a>。</p><p>设计图标我不懂，都是设计师负责产出的。<br>产出后，可以看到图标的<code>Unicode</code>和<code>font class</code>。</p><p>使用时，需要把字体引用<code>@font-face</code>复制到项目公共样式中，可以使用在线字体链接或者下载到本地服务器，然后可以选择两种方式引用。</p><h3 id=\"1-直接使用Unicode\"><a href=\"#1-直接使用Unicode\" class=\"headerlink\" title=\"1.直接使用Unicode\"></a>1.直接使用<code>Unicode</code></h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.icon</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">    <span class=\"attribute\">font-family</span>: <span class=\"string\">\"iconfont\"</span>;</div><div class=\"line\">    <span class=\"attribute\">font-style</span>: normal;</div><div class=\"line\">    <span class=\"attribute\">font-weight</span>: normal;</div><div class=\"line\">    <span class=\"attribute\">-webkit-font-smoothing</span>: antialiased;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon\"</span>&gt;</span>&amp;#xe74e;<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></div></pre></td></tr></table></figure><p>把<code>Unicode</code>直接写入页面内容中，渲染出图标。</p><h3 id=\"2-使用font-class\"><a href=\"#2-使用font-class\" class=\"headerlink\" title=\"2.使用font class\"></a>2.使用<code>font class</code></h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-attr\">[class^=\"icon-\"]</span><span class=\"selector-pseudo\">:before</span>, <span class=\"selector-attr\">[class*=\" icon-\"]</span><span class=\"selector-pseudo\">:before</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">text-decoration</span>: inherit;</div><div class=\"line\">    <span class=\"attribute\">display</span>: inline-block;</div><div class=\"line\">    <span class=\"attribute\">speak</span>: none;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.icon-search</span><span class=\"selector-pseudo\">:before</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\\f002\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-search\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></div></pre></td></tr></table></figure><p>利用伪元素的<code>content</code>属性，把<code>Unicode</code>写到 css 中，不过渲染后还是会在页面展示。</p><h2 id=\"维护\"><a href=\"#维护\" class=\"headerlink\" title=\"维护\"></a>维护</h2><p>由于要IE7不支持伪元素，所以我们这一直是直接使用<code>Unicode</code>的方式引用图标。<br>随着图标的增加，使用极其不方便。</p><ol><li>写页面时每次引用图标就需要打开图标项目页面去复制 Unicode，这个真心记不住啊！</li><li>领导抽风要修改图标，然后图标改过之后 Unicode 发生了变化，然后就需要苦逼的把所有使用这个图标的页面都改一遍 Unicode，还好有 gulp-replace。</li></ol><p>当我意识到这是一个大坑时，已经来不及了。。。</p><p>在之后，我开始基于字符映射的方式去管理字体图标。</p><p>在项目里加了一个图标配置文件。如：</p><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"string\">\"search\"</span>: <span class=\"string\">\"xe74e\"</span>,</div><div class=\"line\">    <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>前端模版入口会直接把这个图标数据加入页面上下文。由于配置文件定义了语义化的命名，页面使用就方便多了。</p><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon\"</span>&gt;</span>&amp;#<span class=\"tag\">&lt;<span class=\"name\">%=icon.search</span> %&gt;</span>;<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></div></pre></td></tr></table></figure><p>我这边后端是 .net，不管是什么语言，都只需要在公共类中加个读取图标的方法。这样前端的模版拿到后端也不需要进行什么修改。</p><p>然而直接促使我发此文的原因是因为不小心点开了 Font Awesome 用于兼容 IE7 的 css 文件。</p><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><div class=\"line\">.icon-file &#123;</div><div class=\"line\">    *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&amp;#xf016;' )</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p>expression 是 ie 特有的 css 属性，可以在其中写 js 脚本。这样又把图标的维护权交还 css 了。</p><p>在 css 中写 js 这种做法肯定是不提倡的，而且一个页面上存在很多的图标，在 ie7 这么恶劣的环境中，渲染速度也是个大问题。我用 IE7 打开 Font Awesome 的页面，速度在30s左右。</p><p>这是个问题，又不算问题。😏</p>","categories":[],"tags":[{"name":"CSS","path":"api/tags/CSS.json"},{"name":"iconfont","path":"api/tags/iconfont.json"}]}