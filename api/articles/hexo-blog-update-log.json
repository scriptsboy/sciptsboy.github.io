{"title":"Hexo博客改版记录","slug":"hexo-blog-update-log","date":"2016-01-18T01:02:18.000Z","updated":"2016-11-12T19:07:13.188Z","comments":true,"path":"api/articles/hexo-blog-update-log.json","excerpt":"<p>每当我把之前立下的 flag 执行的时候，都感觉是一件很骄傲的事，太多的计划被我用各种接口扼杀在摇篮中了。</p><h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>在 Android 更新到 5.0 后，我就对触摸反馈这一点很感兴趣。也尝试模拟过，但是最后的效果都不太满意。<br>偶然的一次在 github上 看到了 Materialize 这个项目，才知道了谷歌的<code>Material Design(原质化设计)</code> 设计规范。而后在公司听到设计师提到这个东西时，突然有种跟上了潮流的感觉。</p><p>就像一些文章中提到的，<strong>即使你不懂设计，但是照着样式去做，也不会太丑。</strong><br>这显然很对我的胃口。<br>","content":"<p>每当我把之前立下的 flag 执行的时候，都感觉是一件很骄傲的事，太多的计划被我用各种接口扼杀在摇篮中了。</p><h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>在 Android 更新到 5.0 后，我就对触摸反馈这一点很感兴趣。也尝试模拟过，但是最后的效果都不太满意。<br>偶然的一次在 github上 看到了 Materialize 这个项目，才知道了谷歌的<code>Material Design(原质化设计)</code> 设计规范。而后在公司听到设计师提到这个东西时，突然有种跟上了潮流的感觉。</p><p>就像一些文章中提到的，<strong>即使你不懂设计，但是照着样式去做，也不会太丑。</strong><br>这显然很对我的胃口。<br><a id=\"more\"></a></p><h2 id=\"改版内容\"><a href=\"#改版内容\" class=\"headerlink\" title=\"改版内容\"></a>改版内容</h2><p>除了博客风格改版外，也改变了以下一些内容。</p><h3 id=\"Hexo-toc\"><a href=\"#Hexo-toc\" class=\"headerlink\" title=\"Hexo toc\"></a>Hexo toc</h3><p>在我刚使用 Hexo 不久时，还曾专门写了一篇文章介绍 hexo-toc 插件的使用。不过最近在我升级了 hexo-toc 插件后，发现已经不需要像我写的那么麻烦了。这还不是重点。<br>因为博客布局结构要有很大变化，很多模版我都需要重写。所以就需要查阅 Hexo 文档寻找一些可利用的资料。<br>就在这个过程中，我居然发现了 Hexo 居然有生成 toc 的辅助方法。好气好气，也不是第一次翻文档了，之前居然都没注意到。</p><p>与 hexo-toc 插件比，这个辅助方法更加便利。<a href=\"https://hexo.io/docs/helpers.html#toc\" target=\"_blank\" rel=\"external\">文档链接</a><br>hexo-toc 需要在编辑时插入<code>&lt;!--toc--&gt;</code>标记，且生成后的内容还在文章中占位。这对于想实现一些浮动式文章导航的同学十分不便。<br>而<code>&lt;%- toc(str, [options]) %&gt;</code>方法就简单多了，只要是在文章页中，你放到什么地方，就在什么地方渲染。</p><h3 id=\"去-jquery\"><a href=\"#去-jquery\" class=\"headerlink\" title=\"去 jquery\"></a>去 jquery</h3><p>仅仅是一个博客，也没有多少复杂的 Dom 操作。读者也都是程序猿，也不存在要考虑浏览器兼容。jquery 能不用则不用，当前的 js 也就写了100多行。</p><h3 id=\"去-fancybox\"><a href=\"#去-fancybox\" class=\"headerlink\" title=\"去 fancybox\"></a>去 fancybox</h3><p>fancybox 是基于 jquery 的一个图片浏览插件，jquery 去了，它自然也就失效了。请求数挺多的,而且它本身的功能，我并不在意，没什么卵用的感觉。如果后续有需要，也可以用原生实现一个。</p><h3 id=\"去-stylus-用-less\"><a href=\"#去-stylus-用-less\" class=\"headerlink\" title=\"去 stylus, 用 less\"></a>去 stylus, 用 less</h3><p>这个纯粹是个人的习惯。html 和 css 还是喜欢原生的代码风格，stylus 和 jade 这种强缩进的都不太喜欢。</p><p>替换时需要在配置文件中增加 less 插件的依赖和参数配置。</p><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">plugins:</div><div class=\"line\">  - hexo-renderer-less</div><div class=\"line\"></div><div class=\"line\">less:</div><div class=\"line\">  paths:</div><div class=\"line\">    - source/css/style.less</div></pre></td></tr></table></figure><h3 id=\"安装-roboto-字体\"><a href=\"#安装-roboto-字体\" class=\"headerlink\" title=\"安装 roboto 字体\"></a>安装 roboto 字体</h3><p>Roboto 字体是 Material Design 的推荐英文字体。英文字体文件字节小，毕竟只有26个字母。虽然写不了几个单词。<br>中文推荐字体是 Note，但是要115.5MB。<a href=\"http://www.google.com/get/noto/#sans-hans\" target=\"_blank\" rel=\"external\">Google Note Fonts</a></p><h3 id=\"增加-Waves-效果\"><a href=\"#增加-Waves-效果\" class=\"headerlink\" title=\"增加 Waves 效果\"></a>增加 Waves 效果</h3><p>这个也是 Material Design 提倡的响应式交互效果。<br>Materialize 中使用的是 <a href=\"https://github.com/fians/Waves\" target=\"_blank\" rel=\"external\">Waves</a>。我也是顺藤摸瓜才知道了这个库。</p><h3 id=\"分享\"><a href=\"#分享\" class=\"headerlink\" title=\"分享\"></a>分享</h3><p>现在的文章分享是直接通过 <a href=\"http://www.jiathis.com/help/html/share-with-jiathis-api\" target=\"_blank\" rel=\"external\">JiaThis API</a> 接口，不需要引用额外的js。这样DIY就更方便了。<br>默认的分享样式，很难实现一些效果。像我现在的分享，有文章右侧的静态挂件和顶部浮动导航右侧的分享按钮。</p><h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>我不懂设计，所以关于 Material Design 的介绍，也就不多提。附上参考链接，有兴趣的可以去提高一下审美。</p><ul><li><a href=\"http://www.google.com/design/spec/material-design/introduction.html\" target=\"_blank\" rel=\"external\">Google Material design</a></li><li><a href=\"http://wiki.jikexueyuan.com/project/material-design/\" target=\"_blank\" rel=\"external\">Material Design 中文版</a></li><li><a href=\"https://github.com/dogfalo/materialize/\" target=\"_blank\" rel=\"external\">Material design的实现：Materialize</a></li></ul><p>一些小细节还会不断的调整，之后整理下再把主题发布到 github 上。</p>","categories":[],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"Material Design","path":"api/tags/Material Design.json"}]}